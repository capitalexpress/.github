name: Go Build and Publish

inputs:
  IMAGEN_VERSION:
    description: "The version of the image to build"
    required: true
    type: string
  ENV:
    description: "The environment to deploy to (stage, test, production)"
    required: true
    type: string
  ECR_REPOSITORY:
    description: "ECR repository name"
    required: true
    type: string
  DOCKER_HUB_USERNAME:
    description: "Docker Hub username"
    required: true
    type: string
  DOCKER_HUB_TOKEN:
    description: "Docker Hub token"
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Login Docker Hub
      id: login-docker-hub
      uses: docker/login-action@v2
      with:
          username: ${{ inputs.DOCKER_HUB_USERNAME }}
          password: ${{ inputs.DOCKER_HUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Set image tag outputs
      id: set-image-tags
      shell: bash
      run: |
        echo "IMAGEN_VERSION_TAG=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGEN_VERSION }}-${{ env.IMAGEN_ENV }}" >> "$GITHUB_OUTPUT"
        echo "IMAGEN_HASH_TAG=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGEN_HASH }}" >> "$GITHUB_OUTPUT"
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
        IMAGEN_VERSION: ${{ inputs.IMAGEN_VERSION }}
        IMAGEN_HASH: ${{ github.sha }}
        IMAGEN_ENV: ${{ inputs.ENV }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        file: ./Dockerfile
        #platforms: linux/amd64,linux/arm64
        tags: |
          ${{ steps.set-image-tags.outputs.IMAGEN_VERSION_TAG }}
          ${{ steps.set-image-tags.outputs.IMAGEN_HASH_TAG }}
outputs:
  IMAGEN_VERSION_TAG:
    description: "Image tag with version"
    value: ${{ steps.set-image-tags.outputs.IMAGEN_VERSION_TAG }}
  IMAGEN_HASH_TAG:
    description: "Image tag with hash"
    value: ${{ steps.set-image-tags.outputs.IMAGEN_HASH_TAG }}
